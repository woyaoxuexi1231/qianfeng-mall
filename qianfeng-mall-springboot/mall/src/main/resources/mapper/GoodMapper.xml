<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.xyh.mall.dao.GoodMapper">
  <resultMap id="BaseResultMap" type="team.xyh.mall.pojo.Good">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="brand" jdbcType="VARCHAR" property="brand" />
    <result column="img_url" jdbcType="VARCHAR" property="imgUrl" />
    <result column="proceeds" jdbcType="VARCHAR" property="proceeds" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
  </resultMap>
  <update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    update good set status = 3
    where id = #{id,jdbcType=INTEGER}
  </update>
  <delete id="deleteImages">
    delete from good_image where img_url=#{imageUrl};
  </delete>
  <insert id="insert" parameterType="team.xyh.mall.pojo.Good" useGeneratedKeys="true" keyProperty="id">
    insert into good ( name, price,
      brand, img_url, proceeds, 
      status, stock,description,type)
    values (#{name,jdbcType=VARCHAR}, #{price},
      #{brand,jdbcType=VARCHAR}, #{imgUrl,jdbcType=VARCHAR}, #{proceeds,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{stock,jdbcType=INTEGER},#{description},#{type})
  </insert>
  <insert id="uploadGoodImage">
    insert good_image (good_id,img_url) value (#{goodId},#{image})
  </insert>
  <update id="updateByPrimaryKey" parameterType="team.xyh.mall.pojo.Good">
    update good
    set name = #{name,jdbcType=VARCHAR},
      price = #{price},
      brand = #{brand,jdbcType=VARCHAR},
      img_url = #{imgUrl,jdbcType=VARCHAR},
      proceeds = #{proceeds,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER},
      description = #{description},
      type = #{type}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, price, brand, img_url, proceeds, status, stock,description,type
    from good
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, price, brand, img_url, proceeds, status, stock,description,type
    from good
    <where>
      <if test="name != null and name !=''">
        name like concat("%",#{name},"%")
      </if>
      <if test="minPrice != 0 and maxPrice != 0">
        and price between #{minPrice} and #{maxPrice}
      </if>
      <if test="minPrice != 0 and maxPrice == 0">
        and price >= #{minPrice}
      </if>
      <if test="minPrice == 0 and maxPrice != 0">
        and #{maxPrice} >= price
      </if>
      <if test="brand != null and brand !=''">
        and brand = #{brand}
      </if>
      <if test="type != null and type !=''">
        and type = #{type}
      </if>
    </where>
    limit #{start},#{limit}
  </select>
  <select id="count" resultType="java.lang.Integer">
    select COUNT(*) FROM good
    <where>
    <if test="name != null and name !=''">
      name like concat("%",#{name},"%")
    </if>
    <if test="minPrice != 0 and maxPrice != 0">
      and price between #{minPrice} and #{maxPrice}
    </if>
    <if test="minPrice != 0 and maxPrice == 0">
      and price >= #{minPrice}
    </if>
    <if test="minPrice == 0 and maxPrice != 0">
      and #{maxPrice} >= price
    </if>
    <if test="brand != null and brand !=''">
      and brand = #{brand}
    </if>
    <if test="type != null and type !=''">
      and type = #{type}
    </if>
  </where>
  </select>
  <update id="statusChange">
    update good set status = #{status} where id = #{id}
  </update>
  <select id="getAllBrand" resultType="java.lang.String">
    select distinct brand from type_brand
  </select>
  <select id="getAllType" resultType="java.lang.String">
    select distinct type from type_brand
  </select>
  <select id="getAllImages" resultType="team.xyh.mall.dto.Images">
    select img_url as url,id as name from good_image where good_id = #{goodId}
  </select>
  <update id="updateGood" parameterType="team.xyh.mall.pojo.Good">
    update good
    set name = #{name},
      price = #{price},
      brand = #{brand},
      img_url = #{imgUrl},
      proceeds = #{proceeds},
      status = #{status},
      stock = #{stock},
      description = #{description},
      type = #{type}
    where id=#{id}
  </update>


</mapper>